name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-tag:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do Código
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Configurar Git
      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # 3. Obter a Última Tag
      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "Última tag: $latest_tag"

      # 4. Incrementar a Versão
      - name: Calculate New Tag
        id: calculate_new_tag
        run: |
          latest_tag=${{ env.latest_tag }}
          IFS='.' read -r major minor patch <<<"${latest_tag#v}"
          patch=$((patch + 1))
          new_tag="v$major.$minor.$patch"
          echo "new_tag=$new_tag" >> $GITHUB_ENV
          echo "Nova tag calculada: $new_tag"

      # 5. Criar e Publicar a Nova Tag
      - name: Create and Push New Tag
        run: |
          if git rev-parse --quiet --verify "refs/tags/${{ env.new_tag }}" >/dev/null; then
            echo "Tag ${{ env.new_tag }} já existe. Substituindo..."
            git tag -d ${{ env.new_tag }}
            git push origin :refs/tags/${{ env.new_tag }}
          fi
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

      # 6. Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 7. Build da Imagem Docker com a Nova Tag
      - name: Build Docker Image
        run: |
          docker build \
            --build-arg APP_VERSION=${{ env.new_tag }} \
            -t irvids/irvi-passenger-python:${{ env.new_tag }} \
            .
          docker tag irvids/irvi-passenger-python:${{ env.new_tag }} irvids/irvi-passenger-python:latest

      # 8. Testar a Imagem Docker
      - name: Test Docker Image
        run: |
          docker run --rm -e PYTHONPATH=/opt/app irvids/irvi-passenger-python:${{ env.new_tag }} pytest app/tests/

      # 9. Login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 10. Push da Imagem para o Docker Hub com a Nova Tag e Latest
      - name: Push Docker Image
        run: |
          docker push irvids/irvi-passenger-python:${{ env.new_tag }}
          docker push irvids/irvi-passenger-python:latest
